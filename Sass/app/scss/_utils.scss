
@mixin background($imgpath, $position:0 0, $repeat: no-repeat, $color: transparent) {
  background: {
    image: url($imgpath);
    position: $position;
    repeat: $repeat;
    color: $color;
  }
}

@mixin border($size: 1px, $color: transparant,
$left: false, $bottom: false, $right:false, $top: false){
  @if ($left)   { border-left: $size solid $color;   }
  @if ($right)  { border-right: $size solid $color;  }
  @if ($top)    { border-top: $size solid $color;    }
  @if ($bottom) { border-bottom: $size solid $color; }
}

@mixin box-sizing($type:border-box) {
  -webkit-box-sizing: $type;  // Android < 2.3, iOS < 4
  -moz-box-sizing: $type;     // Firefox < 29
  box-sizing: $type;          // Chrome, IE 8+, Opera, Safari 5.1
}

@mixin radius($radius:$global-radius) {
  @if $radius {
    border-radius: $radius;
  }
}

@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;

  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use these functions to define ranges for various things, like media queries.
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}
